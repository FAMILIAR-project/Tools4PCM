language
intended use
imperative
object-oriented
functional
procedural
generic
reflective
event-driven
other paradigm(s)
standardized?
actionscript 3.0
application, client-side, web
x
x




x

1996, ecma
ada
application, embedded, realtime, system
x
x

x
x


concurrent, distributed, imperative object-oriented
1983, 2005, 2012, ansi, iso, gost 27831-88
aldor
highly domain-specific, symbolic computing
x
x
x





no
algol 58
application
x







no
algol 60
application
x







1960, ifip wg 2.1, iso
algol 68
application
x






concurrent
1968, ifip wg 2.1, gost 27974-88,
ateji px
parallel application

x





pi calculus
no
apl
application, data processing







array-oriented, tacit
1989, iso
assembly language
general
x






any, syntax is usually highly specific, related to the target processor
no
autohotkey
gui automation (macros), highly domain-specific
x







no
autoit
gui automation (macros), highly domain-specific
x


x


x

no
basic
application, education
x


x




1983, ansi, iso
bbj
application, business, web

x

x




no
beanshell
application, scripting
x
x
x


x


in progress, jcp
bitc
system
x

x





no
bliss
system



x




no
blitzmax
application, game
x
x

x




no
boo
application








no
bro
domain-specific, application
x





x

no
c
application, system, general purpose, low-level operations
x


x




1989, ansi c89, iso c90, iso c99, iso c11
c++
application, system
x
x
x
x
x



1998, iso/iec 1998, iso/iec 2003, iso/iec 2011
c#
application, rad, business, client-side, general, server-side, web, robotics
x
x
x

x
x
x
structured, concurrent
2000, ecma, iso
clarion
general, business, web
x
x
x





unknown
clean
general


x

x



no
clojure
general


x




concurrent
no
clu
general
x
x

x
x



no
cobol
application, business
x
x






2002 (iso/iec 1989)
cobra
application, business, general, web
x
x
x

x
x


no
coldfusion (cfml)
web

x

x




no
common lisp
general
x
x
x

x
x


1994, ansi
comal 80
education
x


x




no
crystal 1.0.0
education
x

x
x




no
cython
application, general, numerical computing
x
x
x


x

aspect-oriented
no
d
application, system
x
x
x

x


generative, concurrent
no
dart
application, web
x
x





structured
no
dylan
application

x
x





no
eiffel
application
x
x


x



2005, ecma, iso
erlang
application, distributed, telecom


x




concurrent, distributed
no
euphoria
application. since the interpreter is shared for system and application code, system is not an intended use because application crashes would affect the whole system.



x

x


no
factor








stack-oriented
no
falcon
general, application

x
x
x



prototype oop, message oriented, tabular programming
no
fp



x





no
f#
application
x
x
x

x



no
forth
general
x






stack-oriented
1994, ansi
fortran
application, numerical computing
x
x

x
x



1966, ansi 66, ansi 77, mil-std-1753, iso 90, iso 95, iso 2003, iso/iec 1539-1:2010 (2008)
freebasic
application, numerical computing
x
x

x
x



1956
g2
application, inference, expert system
x
x




x
common graphical development and runtime environment
no
gambas
application
x
x




x

no
game maker language
application, games
x
x




x

no
glbasic
application, games
x
x

x



simple object-oriented
no
go
application, system
x






concurrent
no
gosu
application, general, scripting, web
x
x


x
x


no
graphtalk
application

x





logic
no
groovy
application, general, scripting, web
x
x
x




aspect-oriented
in progress, jcp
harbour
application, business, data processing, general, web
x
x
x
x
x
x

declarative
no
haskell
application


x

x


lazy evaluation
2010, haskell 2010
haxe
application, general, web
x
x
x

x
x


no
hypernext
application, education



x


x
weakly typed
no
hypertalk
application, rad, general

x




x
weakly typed
unknown
io
application, host-driven scripting
x
x






no
islisp
general
x
x
x

x



1997, iso
j
data processing







array-oriented, function-level, tacit
no
jade
application, distributed
x
x






no
java
application, business, client-side, general, server-side, web
x
x


x
x

concurrent
de facto standard via java language specification
javascript
client-side, server-side, web
x

x


x

prototype-based
1997, ecma
joy
research


x




stack-oriented
no
k
data processing, business







array-oriented, tacit
unknown
kotlin
application, mobile development, server-sider, client-side, web (javascript, html, css)
x
x
x

x




labview (g)
application, industrial instrumentation-automation







dataflow, visual
no
lisp
general


x





unknown
livecode
application, rad, general

x




x
weakly typed
no
logtalk
artificial intelligence, application

x



x
x
logic
no
lua
application, embedded scripting
x
x
x
x

x

aspect-oriented
no
maple
symbolic computation, numerical computing
x
x
x
x



distributed
no
mathematica
symbolic language
x
x
x
x



logic, distributed
no
matlab
highly domain-specific, numerical computing
x
x

x




no
modula-2
application, system
x



x



1996, iso
modula-3
application
x
x


x



no
oberon
application, system
x
x






no
objective-c
application, general
x
x



x

concurrent
no
occam
general
x


x



concurrent, process-oriented
no
opa
web applications
x

x

x


distributed
no
oxygene
application
x
x


x



no
oz
application, distribution, education
x
x
x




concurrent, logic
no
pascal
application, education
x


x




1983, iso
pawn
embedded, host-driven scripting
x







no
perl
application, scripting, text processing, web
x
x
x
x
x
x


no
php
server-side, web application, web
x
x

x

x


no
pl/i
application
x
x

x




1969
plus
application, system development
x


x




no
prolog
application, artificial intelligence







logic
1995, iso
purebasic
application



x




no
python
application, general, web, scripting, ai, scientific computing
x
x
x


x

aspect-oriented
no
racket
education, general, scripting

x
x
x

x

modular, logic, meta
no
realbasic
application



x




unknown
rebol
distributed
x
x
x




dialected
no
rpg (ibm)
application, system
x


x




no
ruby
application, scripting, web
x
x
x


x

aspect-oriented
2011(jis x 3017), 2012(iso/iec 30170)
rust
application, system
x
x
x

x
x

concurrent
no
s
application, statistics
x
x
x
x




no
s-lang
application, numerical, scripting
x


x




no
scala
application, distributed, web
x
x
x

x



de facto standard via scala language specification (sls)
scheme
education, general


x





1998, rrs
seed7
application, general, scripting, web
x
x


x
x

multi-paradigm, extensible, structured
no
simula
education, general
x
x




x
discrete event simulation, multi-threaded (quasi-parallel) program execution
1968
small basic
application, education, games
x





x
component-oriented
no
smalltalk
application, education

x



x
x
concurrent, declarative
1998, ansi
snobol
text processing








unknown
standard ml
application
x

x

x



1997, sml '97
tcl
application, scripting, web
x


x

x
x

no
visual basic
application, rad, education, business, general, (includes vba), office automation
x



x

x
component-oriented
no

application, rad, education, web, business, general
x
x


x
x
x

no
visual foxpro
application

x





data-centric, logic
no
visual prolog
application
x
x
x



x
declarative, logic
no
windows powershell
administration
x
x
x


x

pipeline
no
xl

x
x





concept programming
no
ya
general, language oriented, compiler generator
x
x
x
x
x


language oriented programming as compiler generator, metaprogramming
no
language
intended use
imperative
object-oriented
functional
procedural
generic
reflective
event-driven
other paradigm(s)
standardized?
language
type safety
type expression
type compatibility and equivalence
type checking
actionscript 3.0
safe
implicit with optional explicit typing

static
ada
safe
explicit
nominal
static
aldor
unsafe
implicit

static
algol 58
safe
explicit

static
algol 60
safe
explicit

static
algol 68
safe
explicit
structural
static & tagged union
apl
safe


dynamic
autohotkey
typeless
n/a
n/a
n/a
ateji px
safe
explicit
nominal
static
basic
safe
explicit
nominal
static
bliss
typeless
n/a
n/a
n/a
beanshell
safe

nominal
dynamic
boo
safe
implicit with optional explicit typing

static with optional dynamic typing
bro
safe
implicit with optional explicit typing
nominal
static
c
unsafe
explicit
nominal
static
c++ (iso/iec 14882)
unsafe
explicit
nominal
static
c#
unsafe
implicit with optional explicit typing
nominal
static
clean
safe
implicit

static
clojure
safe
implicit with optional explicit typing

dynamic
cobol
safe
explicit

static
coldfusion (cfml)
safe
implicit

dynamic
common lisp
safe
implicit with optional explicit typing

dynamic
curl
safe

nominal

cython
safe
implicit with optional explicit typing
nominal (extension types) and structural (python)
dynamic with optional static typing
d
unsafe
explicit
nominal
static
dylan
safe


dynamic
dynace
safe
implicit

dynamic
eiffel
safe

nominal
static
erlang
safe
implicit

dynamic
euphoria
safe
explicit, implicit with objects
nominal
static, dynamic with objects
f#
safe
implicit
nominal
static
falcon
safe
implicit
structural
dynamic
forth
typeless
n/a
n/a
n/a
fortran
safe
explicit
nominal
static
gambas
safe
explicit
nominal

glbasic
safe
explicit. non-explicit declarations available through project options
nominal
static
go
safe
implicit with optional explicit typing
structural
static
gosu
safe
partially implicit (local type inference)
nominal (subclassing) and structural (structural)
static
groovy
safe
implicit with optional explicit typing

dynamic with optional static typing
harbour
safe
implicit with optional explicit typing

dynamic
haskell
safe
implicit with optional explicit typing
structural
static
haxe
safe
implicit with optional explicit typing
nominal (subclassing) and structural (structural)
static with optional dynamic typing
io
safe
implicit

dynamic
islisp
safe


dynamic
j
safe


dynamic
java
safe
explicit
nominal
static
javascript
safe
implicit
structural
dynamic
joy
safe


dynamic
kotlin
safe
partially implicit (local type inference)
nominal
static
labview
safe



lua
safe
implicit

dynamic
maple
safe


dynamic
mathematica
safe


dynamic
matlab m-code
safe


dynamic
modula-2
unsafe
explicit
nominal
static
modula-3
unsafe
explicit
structural
static
oberon
safe
explicit
nominal
static and partially dynamic
objective-c
safe
explicit
nominal
dynamic with optional static typing
ocaml
safe
implicit with optional explicit typing
structural
static
object pascal (delphi)
safe
explicit
nominal
static
opa
safe
implicit with optional explicit typing
structural
static
oxygene
unsafe
implicit

static
oz
safe
implicit
structural
dynamic
pascal
unsafe
explicit
nominal
static
perl 5

implicit

dynamic
perl 6

partially implicit

dynamic with optional static typing
php

implicit

dynamic
plus
safe
explicit
structural
static, dynamic (optional)
prolog



dynamic
pure



dynamic
python
safe
implicit
structural
dynamic
rebol
safe
implicit

dynamic
rpg (ibm)
unsafe


static
ruby
safe
implicit
structural
dynamic
rust
safe
implicit with optional explicit typing

static with optional dynamic typing
s



dynamic
s-lang
safe
implicit

dynamic
scala
safe
partially implicit (local type inference)
nominal (subclassing) and structural (structural)
static
scheme
safe
implicit

dynamic (latent)
seed7
safe
explicit
nominal
static
simula
safe


static
smalltalk
safe
implicit

dynamic
standard ml
safe
implicit with optional explicit typing
structural
static
tcl



dynamic
visual basic
safe
implicit with optional explicit typing
nominal
static

unsafe
explicit

static
visual prolog
safe
partially implicit
nominal
static
windows powershell
safe
implicit

dynamic
xl
safe

nominal
static
language
type safety
type expression
type compatibility among composites
type checking
language
failsafe i/o
ada
yes (exceptions)
algol
yes (exceptions or return value depending on function)
autohotkey
no (global errorlevel must be explicitly checked)
bro
yes
c
no
c++
no
c#
yes
cobol
no
common lisp
yes
d
yes[]
eiffel
no – it actually depends on the library and it is not defined by the language
erlang
yes
falcon
yes
fortran
yes
glbasic
no – will generally cause program to crash
go
no
gosu
yes
harbour
yes
haskell
yes
islisp
yes
java
yes
kotlin
yes
labview
yes
lua
no (some functions do not warn or throw exceptions)
mathematica
yes
object pascal (delphi)
some
objective-c
yes (exceptions)
ocaml
yes (exceptions)
perl
no
php
yes
python
yes
rebol
yes
ruby
yes
rust
yes
s
unknown
scala
yes
standard ml
yes[]
tcl
yes
visual basic
yes
visual prolog
yes
language
failsafe i/o
language
statements ratio
lines ratio
c
1
1
c++
2.5
1
fortran
2
0.8
java
2.5
1.5
perl
6
6
smalltalk
6
6.25
python
6
6.5
